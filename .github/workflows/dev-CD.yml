

name: CD

on:
  push:
    branches: [ "main" ] #Main 에 Push 될 때 실행한다

jobs:
  ci:
    runs-on: ubuntu-22.04
    env:
      working-directory: .

    steps:
      - name: 체크아웃
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: create application-secret.properties
        run: |
          ## create application-secret.properties
          mkdir -p ./src/main/resources
          cd ./src/main/resources

          # application-secret.properties 파일 생성
          touch ./application-secret.properties

          # GitHub-Actions 에서 설정한 값을 application-secret.properties 파일에 쓰기
          echo "${{ secrets.PROPERTIES_APPLICATION }}" > ./application-secret.properties
          
          cat ./application-secret.properties

      - name: create application.yml
        run: |
          ## create application-dev.yml
          cd ./src/main/resources

          # application-dev.yml 파일 생성
          touch ./application-dev.yml 

          # GitHub-Actions 에서 설정한 값을 application-dev.yml 파일에 쓰기
          echo "${{ secrets.APPLICATION_DEV }}" > ./application-dev.yml
          
          cat ./application-dev.yml

      - name: 빌드
        run: |
          chmod +x gradlew
          ./gradlew build -x test
        shell: bash


      - name: docker 로그인
        uses: docker/setup-buildx-action@v2.9.1

      - name: login docker hub
        uses: docker/login-action@v2.2.0
        with:
          username: ${{ secrets.DOCKER_LOGIN_USERNAME }}
          password: ${{ secrets.DOCKER_LOGIN_ACCESSTOKEN }}

      - name: docker image 빌드 및 푸시
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: darudaserver:daruda

      - name: docker-compose.yml 파일 EC2 서버로 전송
        uses: appleboy/scp-action@master
        with:
          username: ubuntu
          host: ${{ secrets.EC2_HOST  }}
          key: ${{ secrets.EC2_SSH_KEY }}
          source: "./docker-compose.yml"
          target: "~"
  cd:
    needs: ci
    runs-on: ubuntu-22.04

    steps:
      - name: docker 컨테이너 실행
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            cd ~
            ./deploy.sh
