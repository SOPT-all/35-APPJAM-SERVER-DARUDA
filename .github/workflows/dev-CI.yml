name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name : create application-secret.properties
        run : |
          ## create application-secret.properties 
          mkdir -p ./src/main/resources
          cd ./src/main/resources
          
          #appocation-secret.properties 파일 생성
          touch ./application-secret.properties
          
          #GitHub-Actions 에서 설정한 값들을 application-secret.properties 파일에 쓰기
          echo "${{ secrets.PROPERTIES_APPLICATION }}" > ./application-secret.properties

      - name : application.yml 생성
        run : |
          ## create Application-dev.yml
          cd ./src/main/resources
          
          # application-dev.yml 파일 생성    
          touch ./application-dev.yml
          
          #Github Actions 에서 설정한 값을 application-dev.yml 파일에 쓰기
          echo "${{ secrets.APPLICATION_DEV }}" > ./application-dev.yml
        shell: bash

      - name : Gradle Build 실행
        run: |
          chmod +x gradlew
          ./gradlew :build -x test
        shell : bash
          
      # SSH Key 설정 추가
      - name: Setup SSH Key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/daruda-rsa.pem
          chmod 600 ~/.ssh/daruda-rsa.pem
          ssh-keyscan -H ${{ secrets.EC2_HOST }} 


      # Add SSH deployment after Gradle build
      - name: executing remote ssh commands using ssh key
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          port: ${{ secrets.PORT }}
          script: |
            whoami
            ls -al
            echo "Deployment success!"